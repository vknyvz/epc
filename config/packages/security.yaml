security:

  encoders:
    # this internal class is used by Symfony to represent in-memory users
    Symfony\Component\Security\Core\User\User: 'bcrypt'

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:

    backend_users:
      memory:
        users:
          admin: { password: '$2y$13$8UltV5W1Bc5itEDpbuI0P.amRVu8FnZmBla8nN3ssSUBhdohVTR7.', roles: ['ROLE_ADMIN', 'ROLE_SUPER_ADMIN'] }

    # in_memory: { memory: ~ }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true

      # activate different ways to authenticate

      http_basic:
        realm: Secured Area

      # http_basic: true
      # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

      # form_login: true
      # https://symfony.com/doc/current/security/form_login_setup.html

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }

  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: ROLE_ADMIN